class deal_Test:
    """ 
    >>> from  collections import deque,  OrderedDict,  namedtuple
    >>> from rS import  * 
    >>> import state
    
    >>> s =  state.State(TEST)
    >>> tps = s.get_Top_Stts()
    >>> s.PRINT_Stts()
    Stk T0:
    ((T0, 00): ((  C   , 13), (T0, 00), 1, 1))
    Stk T1:
    ((T1, 00): ((  C   , 12), (T1, 00), 0, 0))
    ((T1, 01): ((  C   , 11), (T1, 01), 1, 0))
    ((T1, 02): ((  C   , 10), (T1, 02), 1, 0))
    ((T1, 03): ((  C   , 09), (T1, 03), 1, 0))
    ((T1, 04): ((  C   , 08), (T1, 04), 1, 0))
    ((T1, 05): ((  C   , 07), (T1, 05), 1, 1))
    Stk T2:
    ((T2, 00): ((  C   , 06), (T2, 00), 0, 0))
    ((T2, 01): ((  C   , 05), (T2, 01), 0, 0))
    ((T2, 02): ((  C   , 04), (T2, 02), 1, 0))
    ((T2, 03): ((  C   , 03), (T2, 03), 1, 0))
    ((T2, 04): ((  C   , 02), (T2, 04), 1, 0))
    ((T2, 05): ((  C   , 01), (T2, 05), 1, 0))
    ((T2, 06): ((  D   , 13), (T2, 06), 1, 1))
    Stk T3:
    ((T3, 00): ((  D   , 12), (T3, 00), 0, 0))
    ((T3, 01): ((  D   , 11), (T3, 01), 0, 0))
    ((T3, 02): ((  D   , 10), (T3, 02), 0, 0))
    ((T3, 03): ((  D   , 09), (T3, 03), 1, 0))
    ((T3, 04): ((  D   , 08), (T3, 04), 1, 0))
    ((T3, 05): ((  D   , 07), (T3, 05), 1, 0))
    ((T3, 06): ((  D   , 06), (T3, 06), 1, 0))
    ((T3, 07): ((  D   , 05), (T3, 07), 1, 1))
    Stk T4:
    ((T4, 00): ((  D   , 04), (T4, 00), 0, 0))
    ((T4, 01): ((  D   , 03), (T4, 01), 0, 0))
    ((T4, 02): ((  D   , 02), (T4, 02), 0, 0))
    ((T4, 03): ((  D   , 01), (T4, 03), 0, 0))
    ((T4, 04): ((  H   , 13), (T4, 04), 1, 0))
    ((T4, 05): ((  H   , 12), (T4, 05), 1, 0))
    ((T4, 06): ((  H   , 11), (T4, 06), 1, 0))
    ((T4, 07): ((  H   , 10), (T4, 07), 1, 0))
    ((T4, 08): ((  H   , 09), (T4, 08), 1, 1))
    Stk T5:
    ((T5, 00): ((  H   , 08), (T5, 00), 0, 0))
    ((T5, 01): ((  H   , 07), (T5, 01), 0, 0))
    ((T5, 02): ((  H   , 06), (T5, 02), 0, 0))
    ((T5, 03): ((  H   , 05), (T5, 03), 0, 0))
    ((T5, 04): ((  H   , 04), (T5, 04), 0, 0))
    ((T5, 05): ((  H   , 03), (T5, 05), 1, 0))
    ((T5, 06): ((  H   , 02), (T5, 06), 1, 0))
    ((T5, 07): ((  H   , 01), (T5, 07), 1, 0))
    ((T5, 08): ((  S   , 13), (T5, 08), 1, 0))
    ((T5, 09): ((  S   , 12), (T5, 09), 1, 1))
    Stk T6:
    ((T6, 00): ((  S   , 11), (T6, 00), 0, 0))
    ((T6, 01): ((  S   , 10), (T6, 01), 0, 0))
    ((T6, 02): ((  S   , 09), (T6, 02), 0, 0))
    ((T6, 03): ((  S   , 08), (T6, 03), 0, 0))
    ((T6, 04): ((  S   , 07), (T6, 04), 0, 0))
    ((T6, 05): ((  S   , 06), (T6, 05), 0, 0))
    ((T6, 06): ((  S   , 05), (T6, 06), 1, 0))
    ((T6, 07): ((  S   , 04), (T6, 07), 1, 0))
    ((T6, 08): ((  S   , 03), (T6, 08), 1, 0))
    ((T6, 09): ((  S   , 02), (T6, 09), 1, 0))
    ((T6, 10): ((  S   , 01), (T6, 10), 1, 1))
    Stk S:
    (( S, -1): (( None , -1), ( S, -1), 1, 1))
    Stk H:
    (( H, -1): (( None , -1), ( H, -1), 1, 1))
    Stk D:
    (( D, -1): (( None , -1), ( D, -1), 1, 1))
    Stk C:
    (( C, -1): (( None , -1), ( C, -1), 1, 1))
    <BLANKLINE>
    **********************
    
    """
    
    #----------------------------------------------------------------------
if __name__ == "__main__":
    logging.config.fileConfig('myConfig.conf')        
    import doctest
    doctest.testmod(verbose=False)
